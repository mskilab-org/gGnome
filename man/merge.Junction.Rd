% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gGnome.R
\name{merge.Junction}
\alias{merge.Junction}
\title{merge junctions by overlaps with padding

Merges a set of junctions and keeps "seen.by" metadata of junction origin
using the argument names to this function

If cartesian = TRUE, can only merge a pair of junction objects but then the output contains the overlapping 
junctions and metadata annotated with a $query.id (index into first argument) and $subject.id 
(index to into second argument) with deduped outputs,}
\usage{
\method{merge}{Junction}(
  ...,
  pad = 0,
  ind = FALSE,
  cartesian = FALSE,
  all = FALSE,
  all.x = all,
  all.y = all
)
}
\arguments{
\item{...}{GRangesList representing rearrangements to be merged}

\item{pad}{non-negative integer specifying padding}

\item{ind}{logical flag (default FALSE) specifying whether the "seen.by" fields should contain indices of inputs (rather than logical flags) and NA if the given junction is missing}

\item{cartesian}{whether to do a pairwise merge of all junction pairs in two junction objects x and y, which can potentially result in more rows than the number of inputs, Note: only works when there are exactly two inputs x and y}

\item{all}{only applicable if cartesian = TRUE, logical flag specifying whether to keep the junctions and metadata for non-overlapping junction pairs from both x and y inputs, aka "outer join" + "inner join"}

\item{all.x}{only applicable if cartesian = TRUE, logical flag specifying whether to keep the junctions and metadata for non-overlapping junction pairs from j1 in the output aka "left join" + "inner join""}

\item{all.y}{only applicable if cartesian = TRUE, logical flag specifying whether to keep the junctions and metadata for non-overlapping junction pairs from j2 in the output aka "right join" + "inner join"}
}
\description{
merge junctions by overlaps with padding

Merges a set of junctions and keeps "seen.by" metadata of junction origin
using the argument names to this function

If cartesian = TRUE, can only merge a pair of junction objects but then the output contains the overlapping 
junctions and metadata annotated with a $query.id (index into first argument) and $subject.id 
(index to into second argument) with deduped outputs,
}
\examples{

## wil output a Junction object with metadata seen.by.svaba etc.
## will pad with 500 bases prior to merging

svaba = jJ(system.file('extdata', "HCC1143.svaba.somatic.sv.vcf", package = "gGnome"))
delly = jJ(system.file('extdata', "delly.final.vcf.gz", package = "gGnome"))
novobreak = jJ(system.file('extdata', "novoBreak.pass.flt.vcf", package = "gGnome"))

## merge(svaba = svaba, delly = delly, caller3 = novobreak, pad = 500)

}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{fra.overlaps}
\alias{fra.overlaps}
\title{Fast RA Overlaps}
\usage{
fra.overlaps(
  jun_a,
  jun_b,
  pad = 0,
  arr.ind = TRUE,
  ignore.strand = FALSE,
  return.as.data.table = FALSE,
  find_duplicates = FALSE,
  sort_junctions = FALSE
)
}
\arguments{
\item{pad}{Padding to add around each breakend}

\item{ignore.strand}{Ignore breakend strands}

\item{find_duplicates}{Only search for duplicated SVs in a single set of SVs (jun_a and not jun_b must be provided)}
}
\description{
Function that supersedes ra.overlaps
}
\details{
fra.overlaps only searches for relevant matches
that are combinatorially possible. 
I.e. for SV sets A and B each with 2 break point pairs,
ra.overlaps iterates through every breakend match. 
fra.overlaps efficiently does an inner join only on
the possible orientation matches (via data.table). 
Another reason ra.overlaps will be more inefficient is 
that both breakends for small intrachromosomal SVs may
match with the second set, particularly where a pad is involved. 
This will create unnecessary search candidates as we should presume 
the two breakend matches are independent of each other. 
e.g. A_1 and A_2 could both match with B_1.
Even if B_2 is not matched, the tuples (A_1, B_1)
and (A_2, B_1) will still be iterated through. 
fra.overlaps only matches on the combinatorial possibilities
so this is eliminated.
}
\author{
Kevin Hadi
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gGnome.R
\name{gGraph}
\alias{gGraph}
\title{gGraph}
\description{
a genome graph object
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-gGraph-new}{\code{gGraph$new()}}
\item \href{#method-gGraph-walks}{\code{gGraph$walks()}}
\item \href{#method-gGraph-set}{\code{gGraph$set()}}
\item \href{#method-gGraph-queryLookup}{\code{gGraph$queryLookup()}}
\item \href{#method-gGraph-disjoin}{\code{gGraph$disjoin()}}
\item \href{#method-gGraph-simplify}{\code{gGraph$simplify()}}
\item \href{#method-gGraph-reduce}{\code{gGraph$reduce()}}
\item \href{#method-gGraph-subgraph}{\code{gGraph$subgraph()}}
\item \href{#method-gGraph-clusters}{\code{gGraph$clusters()}}
\item \href{#method-gGraph-eclusters}{\code{gGraph$eclusters()}}
\item \href{#method-gGraph-eclusters2}{\code{gGraph$eclusters2()}}
\item \href{#method-gGraph-paths}{\code{gGraph$paths()}}
\item \href{#method-gGraph-dist}{\code{gGraph$dist()}}
\item \href{#method-gGraph-rep}{\code{gGraph$rep()}}
\item \href{#method-gGraph-swap}{\code{gGraph$swap()}}
\item \href{#method-gGraph-connect}{\code{gGraph$connect()}}
\item \href{#method-gGraph-toposort}{\code{gGraph$toposort()}}
\item \href{#method-gGraph-print}{\code{gGraph$print()}}
\item \href{#method-gGraph-annotate}{\code{gGraph$annotate()}}
\item \href{#method-gGraph-maxflow}{\code{gGraph$maxflow()}}
\item \href{#method-gGraph-window}{\code{gGraph$window()}}
\item \href{#method-gGraph-gtrack}{\code{gGraph$gtrack()}}
\item \href{#method-gGraph-trim}{\code{gGraph$trim()}}
\item \href{#method-gGraph-fix}{\code{gGraph$fix()}}
\item \href{#method-gGraph-add}{\code{gGraph$add()}}
\item \href{#method-gGraph-json}{\code{gGraph$json()}}
\item \href{#method-gGraph-get.diameter}{\code{gGraph$get.diameter()}}
\item \href{#method-gGraph-circos}{\code{gGraph$circos()}}
\item \href{#method-gGraph-split}{\code{gGraph$split()}}
\item \href{#method-gGraph-clone}{\code{gGraph$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-new"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$new(
  genome = NULL,
  breaks = NULL,
  juncs = NULL,
  alignments = NULL,
  prego = NULL,
  jabba = NULL,
  cougar = NULL,
  weaver = NULL,
  remixt = NULL,
  rck = NULL,
  walks = NULL,
  nodes = NULL,
  edges = NULL,
  nodeObj = NULL,
  edgeObj = NULL,
  meta = NULL,
  verbose = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-walks"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-walks}{}}}
\subsection{Method \code{walks()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$walks(field = NULL, greedy = FALSE, verbose = FALSE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-set"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-set}{}}}
\subsection{Method \code{set()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$set(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-queryLookup"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-queryLookup}{}}}
\subsection{Method \code{queryLookup()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$queryLookup(id)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-disjoin"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-disjoin}{}}}
\subsection{Method \code{disjoin()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$disjoin(
  gr = NULL,
  by = NULL,
  collapse = TRUE,
  na.rm = TRUE,
  avg = FALSE,
  sep = ",",
  FUN = default.agg.fun.generator(na.rm = na.rm, sep = sep, avg = avg)
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-simplify"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-simplify}{}}}
\subsection{Method \code{simplify()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$simplify(
  by = private$pmeta$by,
  na.rm = TRUE,
  avg = TRUE,
  sep = ",",
  FUN = default.agg.fun.generator(na.rm = na.rm, sep = sep, avg = avg),
  ignore.loose = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-reduce"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-reduce}{}}}
\subsection{Method \code{reduce()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$reduce(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-subgraph"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-subgraph}{}}}
\subsection{Method \code{subgraph()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$subgraph(
  seed = si2gr(self),
  d = NULL,
  k = 0,
  bagel = FALSE,
  mod = FALSE,
  ignore.strand = T,
  verbose = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-clusters"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-clusters}{}}}
\subsection{Method \code{clusters()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$clusters(i = NULL, j = NULL, mode = "weak")}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-eclusters"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-eclusters}{}}}
\subsection{Method \code{eclusters()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$eclusters(
  thresh = 1000,
  range = 1e+06,
  weak = TRUE,
  paths = !weak,
  mc.cores = 1,
  verbose = FALSE,
  chunksize = 1e+30,
  method = "single"
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-eclusters2"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-eclusters2}{}}}
\subsection{Method \code{eclusters2()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$eclusters2(
  thresh = 1000,
  range = 1e+06,
  weak = TRUE,
  paths = !weak,
  mc.cores = 1,
  verbose = FALSE,
  chunksize = 1e+30,
  method = "single",
  return_pairs = FALSE,
  ignore.small = TRUE,
  max.small = 10000,
  ignore.isolated = TRUE,
  strict = c("strict", "one_to_one", "loose"),
  min.isolated = max.small,
  only_chains = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-paths"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-paths}{}}}
\subsection{Method \code{paths()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$paths(
  query,
  subject = query,
  mc.cores = 1,
  weight = NULL,
  meta = NULL,
  ignore.strand = TRUE,
  cartesian = TRUE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-dist"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-dist}{}}}
\subsection{Method \code{dist()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$dist(
  query,
  subject,
  weight = NULL,
  ignore.strand = TRUE,
  include.internal = TRUE,
  verbose = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-rep"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-rep}{}}}
\subsection{Method \code{rep()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$rep(nodes = NULL, times)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-swap"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-swap}{}}}
\subsection{Method \code{swap()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$swap(nodes, replacement)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-connect"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-connect}{}}}
\subsection{Method \code{connect()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$connect(
  n1,
  n2,
  n1.side = "right",
  n2.side = "left",
  type = "ALT",
  meta = NULL,
  insert = NULL
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-toposort"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-toposort}{}}}
\subsection{Method \code{toposort()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$toposort()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-print"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-annotate"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-annotate}{}}}
\subsection{Method \code{annotate()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$annotate(colName, data, id, class)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-maxflow"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-maxflow}{}}}
\subsection{Method \code{maxflow()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$maxflow(
  field = NA,
  walk = FALSE,
  max = TRUE,
  lower.bound = TRUE,
  nfield = NA,
  efield = NA,
  cfield = NA,
  path.only = TRUE,
  require.nodes = NULL,
  multi = FALSE,
  ncopies = 1,
  reverse.complement = FALSE,
  verbose = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-window"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-window}{}}}
\subsection{Method \code{window()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$window(pad = 0)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-gtrack"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-gtrack}{}}}
\subsection{Method \code{gtrack()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$gtrack(
  y.field = NULL,
  lwd.loose = 3,
  col.loose = alpha("blue", 0.6),
  col.alt = alpha("red", 0.4),
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-trim"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-trim}{}}}
\subsection{Method \code{trim()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$trim(tile)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-fix"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-fix}{}}}
\subsection{Method \code{fix()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$fix(pattern = NULL, replacement = NULL, drop = TRUE, seqlengths = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-add"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-add}{}}}
\subsection{Method \code{add()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$add(nodes = NULL, edges = NULL, junctions = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-json"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-json}{}}}
\subsection{Method \code{json()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$json(
  filename = ".",
  maxcn = 100,
  maxweight = 100,
  save = TRUE,
  verbose = FALSE,
  annotations = NULL,
  nfields = NULL,
  efields = NULL,
  settings = list(y_axis = list(title = "copy number", visible = TRUE)),
  cid.field = NULL,
  no.y = FALSE,
  offset = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-get.diameter"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-get.diameter}{}}}
\subsection{Method \code{get.diameter()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$get.diameter(weights = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-circos"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-circos}{}}}
\subsection{Method \code{circos()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$circos(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-split"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-split}{}}}
\subsection{Method \code{split()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$split(by = "parent.graph")}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gGraph-clone"></a>}}
\if{latex}{\out{\hypertarget{method-gGraph-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gGraph$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
